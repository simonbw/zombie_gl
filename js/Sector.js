// Generated by CoffeeScript 1.8.0
(function() {
  window.Sector = (function() {
    Sector.SIZE = 70;

    function Sector(x, y) {
      this.x = x;
      this.y = y;
      this.entities = [];
      this.loaded = false;
    }

    Sector.prototype.load = function(game) {
      var i, j, worldX, worldY, _i, _j, _k, _l;
      if (this.loaded) {
        console.log("already loaded");
      }
      this.loaded = true;
      console.log("loading sector at", this.x, this.y);
      worldX = this.x * Sector.SIZE;
      worldY = this.y * Sector.SIZE;
      game.addEntity(new Ground(worldX, worldY, Sector.SIZE, Sector.SIZE));
      for (i = _i = 0; _i <= 4; i = ++_i) {
        for (j = _j = 0; _j <= 4; j = ++_j) {
          game.addEntity(new Building(worldX + 6 + 12 * i, worldY + 6 + 12 * j));
        }
      }
      for (i = _k = 0; _k <= 3; i = ++_k) {
        for (j = _l = 0; _l <= 3; j = ++_l) {
          game.addEntity(new ZombieSpawner(worldX + 6 + 12 * i + 11, worldY + 6 + 12 * j + 11, 0.1));
        }
      }
      game.addEntity(new StreetLight(worldX, worldY));
      game.addEntity(new StreetLight(worldX, worldY + 35));
      game.addEntity(new StreetLight(worldX + 35, worldY));
      return game.addEntity(new StreetLight(worldX + 35, worldY + 35));
    };

    Sector.prototype.unload = function(game) {
      var entity, _i, _len, _ref, _results;
      if (!this.loaded) {
        console.log("");
      }
      this.loaded = false;
      console.log("unloading sector at", this.x, this.y);
      _ref = this.entities;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entity = _ref[_i];
        _results.push(game.removeEntity(entity));
      }
      return _results;
    };

    return Sector;

  })();

}).call(this);

//# sourceMappingURL=Sector.js.map
