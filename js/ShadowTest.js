// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.ShadowTest = (function() {
    function ShadowTest() {
      this.render = __bind(this.render, this);
      this.update = __bind(this.update, this);
      this.start = __bind(this.start, this);
      console.log("Created New ShadowTest");
    }

    ShadowTest.prototype.start = function() {
      var box, ground, sun;
      console.log("Starting Game");
      this.io = new IO();
      this.renderer = new THREE.WebGLDeferredRenderer({
        width: window.innerWidth,
        height: window.innerHeight,
        scale: 1,
        antialias: true,
        brightness: 1.0
      });
      window.document.body.appendChild(this.renderer.domElement);
      this.scene = new THREE.Scene();
      this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 20000);
      this.scene.add(this.camera);
      this.camera.position.set(0, -200, 400);
      this.camera.lookAt({
        x: 0,
        y: 0,
        z: 0
      });
      window.addEventListener('resize', (function(_this) {
        return function() {
          _this.renderer.setSize(window.innerWidth, window.innerHeight);
          _this.camera.aspect = window.innerWidth / window.innerHeight;
          return _this.camera.updateProjectionMatrix();
        };
      })(this));
      this.renderer.shadowMapEnabled = true;
      this.renderer.shadowMapWidth = 1024;
      this.renderer.shadowMapHeight = 1024;
      sun = new THREE.SpotLight(0xFFFFFF);
      sun.position.set(500, 500, 1000);
      sun.castShadows = true;
      sun.castShadow = true;
      sun.shadowMapWidth = 1024;
      sun.shadowMapHeight = 1024;
      sun.shadowCameraNear = 500;
      sun.shadowCameraFar = 4000;
      sun.shadowCameraFov = 30;
      this.scene.add(sun);
      ground = new THREE.Mesh(new THREE.PlaneGeometry(256 + 128, 256, 1, 1), new THREE.MeshPhongMaterial({
        color: 0x22FF00
      }));
      ground.receiveShadow = true;
      this.scene.add(ground);
      box = new THREE.Mesh(new THREE.CubeGeometry(64, 64, 64), new THREE.MeshPhongMaterial({
        color: 0xFF0000
      }));
      box.castShadow = true;
      box.position.set(0, 0, 32);
      this.scene.add(box);
      console.log("Game Started Successfully");
      return this.update();
    };

    ShadowTest.prototype.update = function() {
      window.requestAnimationFrame(this.update);
      return this.render();
    };

    ShadowTest.prototype.render = function() {
      return this.renderer.render(this.scene, this.camera);
    };

    return ShadowTest;

  })();

}).call(this);

//# sourceMappingURL=ShadowTest.js.map
