// Generated by CoffeeScript 1.7.1
(function() {
  window.SoundManager = (function() {
    function SoundManager(game) {
      this.context = new (window.AudioContext || window.webkitAudioContext)();
      this.buffers = {};
      if (!this.context) {
        alert("No context support");
      } else {
        this.output = this.context.createGain();
        this.output.connect(this.context.destination);
        this.output.gain.value = 1.0;
        this.loadSound('gun_empty');
        this.loadSound('pistol_shot');
        this.loadSound('pistol_reload');
        this.loadSound('pistol_reload_finish');
        this.loadSound('rifle_shot');
        this.loadSound('rifle_reload');
        this.loadSound('rifle_reload_finish');
      }
    }

    SoundManager.prototype.loadSound = function(name) {
      var onDecode, onError, request;
      request = new XMLHttpRequest();
      request.responseType = 'arraybuffer';
      request.open('GET', "resources/sounds/" + name + ".wav", true);
      onDecode = (function(_this) {
        return function(buffer) {
          return _this.buffers[name] = buffer;
        };
      })(this);
      onError = (function(_this) {
        return function(error) {
          return alert(error);
        };
      })(this);
      request.onload = (function(_this) {
        return function() {
          return _this.context.decodeAudioData(request.response, onDecode, onError);
        };
      })(this);
      return request.send();
    };

    SoundManager.prototype.playSound = function(name) {
      var source;
      if (this.buffers[name]) {
        source = this.context.createBufferSource();
        source.buffer = this.buffers[name];
        source.connect(this.output);
        return source.start(0);
      } else {
        return console.log("sound " + name + " not loaded");
      }
    };

    return SoundManager;

  })();

}).call(this);

//# sourceMappingURL=SoundManager.map
